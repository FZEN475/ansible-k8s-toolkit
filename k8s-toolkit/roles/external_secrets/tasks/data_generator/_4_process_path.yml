- name: Debug policy_name
  ansible.builtin.debug:
    var: policy_name

- name: Debug ns
  ansible.builtin.debug:
    var: ns

- name: Debug ns_name
  ansible.builtin.debug:
    var: ns_name

- name: Debug service
  ansible.builtin.debug:
    var: service

- name: Debug service_name
  ansible.builtin.debug:
    var: service_name

- name: Debug path
  ansible.builtin.debug:
    var: path

- name: Debug path_name
  ansible.builtin.debug:
    var: path_name

- name: Debug record_list
  ansible.builtin.debug:
    var: record_list

#- name: Initialize compiled_secret_data
#  ansible.builtin.set_fact:
#    create_ss: true
#    compiled_secret_data: >-
#      {{
#        compiled_secret_data | default({}) | combine({
#          policy_name: (
#            compiled_secret_data[policy_name] | default({}) | combine({
#              (policy_name ~ '-' ~ path_name): (
#                {
#                  'secret_type': (record_entry.extra_parameters | default({})).get('secret_type', ''),
#                  'template_data': (record_entry.extra_parameters | default({})).get('template_data', ''),
#                  'list': (
#                    (
#                      (compiled_secret_data[policy_name] | default({}))
#                      .get(policy_name ~ '-' ~ path_name, {'data': '', 'list': []})
#                      .list
#                    ) + [
#                      {
#                        'secretKey': (record_entry.extra_parameters | default({})).get('secretKey', record_entry.name),
#                        'remoteRef': {
#                          'conversionStrategy': 'Default',
#                          'decodingStrategy': (record_entry.extra_parameters | default({})).get('decodingStrategy', None),
#                          'key': ns_name ~ '/' ~ service_name ~ '/' ~ path_name,
#                          'metadataPolicy': 'None',
#                          'property': record_entry.name
#                        }
#                      }
#                    ]
#                  )
#                }
#              )
#            })
#          )
#        })
#      }}
#  loop: "{{ record_list }}"
#  loop_control:
#    loop_var: record_entry
#
#- name: Initialize compiled_policy_data
#  ansible.builtin.set_fact:
#    create_ss: true
#    compiled_policy_data: >-
#      {{
#        compiled_policy_data | default({}) | combine({
#          policy_name: (
#            compiled_policy_data[policy_name] | default({'data': '', 'list': []}) | combine({
#              'secret_type': (
#                (compiled_policy_data.get(policy_name, {}) or {}).get('secret_type', '')
#                  or (record_entry.extra_parameters | default({})).get('secret_type', '')
#              ),
#              'template_data': (
#                ((compiled_policy_data.get(policy_name, {}) or {}).get('template_data', {}) | default({}))
#                  | combine((record_entry.extra_parameters | default({})).get('template_data', {}) | default({}))
#              ),
#              'list': (
#                (
#                  compiled_policy_data[policy_name].get('list', [])
#                  if compiled_policy_data.get(policy_name)
#                  else []
#                ) + [
#                  {
#                    'secretKey': (record_entry.extra_parameters | default({})).get('secretKey', record_entry.name),
#                    'remoteRef': {
#                      'conversionStrategy': 'Default',
#                      'decodingStrategy': (record_entry.extra_parameters | default({})).get('decodingStrategy', None),
#                      'key': ns_name ~ '/' ~ service_name ~ '/' ~ path_name,
#                      'metadataPolicy': 'None',
#                      'property': record_entry.name
#                    }
#                  }
#                ]
#              )
#            })
#          )
#        })
#      }}
#  loop: "{{ record_list }}"
#  loop_control:
#    loop_var: record_entry
      
- name: Initialize _secret_data
  ansible.builtin.set_fact:
    create_ss: true
    _secret_data: >-
      {{
        (_secret_data | default({'secret_type': '','template_data': {}, 'list': []})) | combine({
          'secret_type': (
            _secret_data.get('secret_type', '')
              or (record_entry.extra_parameters | default({})).get('secret_type', '')
          ),
          'template_data': (
            (_secret_data.get('template_data', {}) | default({}))
              | combine((record_entry.extra_parameters | default({})).get('template_data', {}) | default({}))
          ),
          'list': (
            (_secret_data.get('list', [])) + [
              {
                'secretKey': (record_entry.extra_parameters | default({})).get('secretKey', record_entry.name),
                'remoteRef': {
                  'conversionStrategy': 'Default',
                  'decodingStrategy': (record_entry.extra_parameters | default({})).get('decodingStrategy', None),
                  'key': ns_name ~ '/' ~ service_name ~ '/' ~ path_name,
                  'metadataPolicy': 'None',
                  'property': record_entry.name
                }
              }
            ]
          )
        })
      }}
  loop: "{{ record_list }}"
  loop_control:
    loop_var: record_entry