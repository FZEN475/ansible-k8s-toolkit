
- name: Debug policy_name
  ansible.builtin.debug:
    var: policy_name

- name: Debug policy_ns
  ansible.builtin.debug:
    var: policy_ns

- name: Initialize _secret_data
  ansible.builtin.set_fact:
    _secret_data: {}

- name: Iterate process_ns_entry
  vars:
    ns_name: "{{ ns_entry.key }}"
    service: "{{ ns_entry.value }}"
  ansible.builtin.include_tasks: _2_process_ns.yml
  loop: "{{ policy_ns | dict2items }}"
  loop_control:
    loop_var: ns_entry

- name: Debug _secret_data
  ansible.builtin.debug:
    var: _secret_data

- name: "Action {{ 'present' if (_secret_data.get('list', []) | length > 0) else 'absent' }} external-secret {{ resource_namespace }}/{{ policy_name }}{{ postfix_map[external_secret.es_access_zone] }} ({{ postfix_map[external_secret.es_access_zone] }})"
  kubernetes.core.k8s:
    state: "{{ 'present' if (_secret_data.get('list', []) | length > 0) else 'absent' }}"
    apply: true
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: "{{ external_secret.es_access_zone }}"
      metadata:
        name: "{{ policy_name }}{{ postfix_map[external_secret.es_access_zone] }}"
        namespace: "{{ resource_namespace }}"
      spec:
        refreshInterval: "1m"
        secretStoreRef:
          name: "{{ resource_name }}-{{ version | default('v2') }}{{ postfix_map[secret_store.ss_access_zone] }}"
          kind: "{{ secret_store.ss_access_zone }}"
        target:
          name: "{{ policy_name }}-secrets"
          creationPolicy: Owner
          deletionPolicy: Delete
          template:
            data: "{{ _secret_data.template_data | default(omit,true) }}"
            type: "{{ _secret_data.secret_type | default('Opaque',true) }}"
        data: "{{ _secret_data.get('list', []) }}"
