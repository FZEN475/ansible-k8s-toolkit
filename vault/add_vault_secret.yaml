---

- debug: var=cluster_access
- debug: var=update_secret
- debug: var=delete
- debug: var=name_secret
- debug: var=list
- name: Secrets.
  ansible.builtin.set_fact:
    keys: " \"{{ secret_data.key }}\": \"{{ secret_data.value }}\" "
  register: keys_result
  loop: "{{ list }}"
  loop_control:
    label: "{{ secret_data }}"
    loop_var: secret_data
  when: delete is false

- debug: var=keys_result

- name: Remove ConfigMap add-secret-script
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: add-secret-script
        namespace: secrets

- name: Create ConfigMap add-secret-script
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: add-secret-script
        namespace: secrets
      data:
        add-secret-script.sh: "{{ lookup('ansible.builtin.file', '/source/playbooks/library/vault/add-secret-script.sh') }}"

- name: Remove Job
  kubernetes.core.k8s:
    state: absent
    wait: true
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: "init-secrets-{{ namespace_secret }}-{{ resource }}-{{ name_secret }}"
        namespace: secrets

- name: Create Job
  kubernetes.core.k8s:
    state: present
    wait: true
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: "init-secrets-{{ namespace_secret }}-{{ resource }}-{{ name_secret }}"
        namespace: secrets
      spec:
        backoffLimit: 1200
        ttlSecondsAfterFinished: 120
        template:
          spec:
            containers:
              - name: post-start
                image: "curlimages/curl"
                command: [sh, -c]
                args:
                  - "/tmp/add-secret-script.sh {{ namespace_secret }} {{ resource }} {{ resource }}-sa {{ name_secret }} "
                env:
                  - name: LIST
                    value: "{{ keys_result.results | map(attribute='ansible_facts.keys') | join(',') }}"
                volumeMounts:
                  - mountPath: "/tmp/certs/"
                    name: cm-vault-tls
                    readOnly: true
                  - mountPath: "/tmp/token"
                    name: vault
                    subPath: token
                    readOnly: true
                  - mountPath: "/tmp/add-secret-script.sh"
                    name: add-secret-script
                    subPath: add-secret-script.sh
                    readOnly: true
            restartPolicy: Never
            volumes:
              - name: cm-vault-tls
                secret:
                  secretName: cm-vault-tls
              - name: vault
                secret:
                  secretName: vault
                  items:
                    - key: token
                      path: token
                      mode: 0540
              - name: add-secret-script
                configMap:
                  name: add-secret-script
                  items:
                    - key: add-secret-script.sh
                      path: add-secret-script.sh
                      mode: 0740
  when: delete is false and update_secret is true

- name: Create "{{ namespace_secret }}" namespace
  kubernetes.core.k8s:
    name: "{{ namespace_secret }}"
    api_version: v1
    kind: Namespace
    state: present
  when: delete is false

- name: Create sa
  kubernetes.core.k8s:
    state: present
    wait: true
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ resource }}-sa"
        namespace: "{{ namespace_secret }}"
  when: delete is false

- name: Создание ss
  kubernetes.core.k8s:
    state: present
    wait: true
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: SecretStore
      metadata:
        name: "{{ resource }}-ss"
        namespace: "{{ namespace_secret }}"
      spec:
        retrySettings:
          retryInterval: "10s"
        provider:
          vault:
            server: "https://vault.secrets.svc:8200"
            version: "v2"
            namespace: "{{ namespace_secret }}"
            caProvider:
              type: "Secret"
              name: "{{ vault_ca }}"
              key: "ca.crt"
            auth:
              kubernetes:
                mountPath: "kubernetes"
                role: "{{ resource }}"
                # Optional service account reference
                serviceAccountRef:
                  name: "{{ resource }}-sa"
  when: delete is false and cluster_access is false

- name: Создание ss
  kubernetes.core.k8s:
    state: present
    wait: true
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: ClusterSecretStore
      metadata:
        name: "{{ resource }}-css"
      spec:
        retrySettings:
          retryInterval: "10s"
        provider:
          vault:
            server: "https://vault.secrets.svc:8200"
            version: "v2"
            namespace: "{{ namespace_secret }}"
            caProvider:
              type: "Secret"
              name: "{{ vault_ca }}"
              namespace: "{{ namespace_secret }}"
              key: "ca.crt"
            auth:
              kubernetes:
                mountPath: "kubernetes"
                role: "{{ resource }}"
                # Optional service account reference
                serviceAccountRef:
                  name: "{{ resource }}-sa"
                  namespace: "{{ namespace_secret }}"
  when: delete is false and cluster_access is true

# Удаление секрета
- name: Удаление ss
  kubernetes.core.k8s:
    state: absent
    wait: true
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: SecretStore
      metadata:
        name: "{{ resource }}-ss"
        namespace: "{{ namespace_secret }}"
  when: delete is true and cluster_access is false

- name: Удаление ss
  kubernetes.core.k8s:
    state: absent
    wait: true
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: ClusterSecretStore
      metadata:
        name: "{{ resource }}-css"
  when: delete is true and cluster_access is true

- name: Удаление sa
  kubernetes.core.k8s:
    state: absent
    wait: true
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ resource }}-sa"
        namespace: "{{ namespace_secret }}"
  when: delete is true

- name: Ресурсы helm
  ansible.builtin.set_fact:
    helm_resource_delete: |
      curl -k --cacert /tmp/certs/ca.crt \
      --header "X-Vault-Token: $(cat /tmp/token)" \
      --request DELETE \
      https://vault.secrets.svc:8200/v1/{{ namespace_secret }}/data/{{ resource }}/{{ name_secret }};
  when: delete is true

- name: Job удаления секретов
  kubernetes.core.k8s:
    state: absent
    wait: true
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: "init-secrets-{{ namespace_secret }}-{{ resource }}-{{ name_secret }}-delete"
        namespace: secrets
  when: delete is true

- name: Job удаления секретов
  kubernetes.core.k8s:
    state: present
    wait: true
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: "init-secrets-{{ namespace_secret }}-{{ resource }}-{{ name_secret }}-delete"
        namespace: secrets
      spec:
        backoffLimit: 5
        ttlSecondsAfterFinished: 120
        template:
          spec:
            containers:
              - name: post-start
                image: "curlimages/curl"
                command: [sh, -c]
                args:
                  - "{{ helm_resource_delete }}"
                volumeMounts:
                  - mountPath: "/tmp/certs/"
                    name: cm-vault-tls
                    readOnly: true
                  - mountPath: "/tmp/token"
                    name: vault
                    subPath: token
                    readOnly: true
            restartPolicy: Never
            volumes:
              - name: cm-vault-tls
                secret:
                  secretName: cm-vault-tls
              - name: vault
                secret:
                  secretName: vault
                  items:
                    - key: token
                      path: token
                      mode: 0640
  when: delete is true
